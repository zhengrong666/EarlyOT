// Copyright lowRISC contributors (OpenTitan project).
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// tl_main_rot package generated by `tlgen.py` tool

package tl_main_rot_pkg;

  localparam logic [31:0] ADDR_SPACE_ROM_CTRL__ROM  = 32'h 00008000;
  localparam logic [31:0] ADDR_SPACE_ROM_CTRL__REGS = 32'h 411e0000;
  localparam logic [31:0] ADDR_SPACE_HMAC           = 32'h 41110000;
  localparam logic [31:0] ADDR_SPACE_KMAC           = 32'h 41120000;
  localparam logic [31:0] ADDR_SPACE_AES            = 32'h 41100000;
  localparam logic [31:0] ADDR_SPACE_ENTROPY_SRC    = 32'h 41160000;
  localparam logic [31:0] ADDR_SPACE_CSRNG          = 32'h 41150000;
  localparam logic [31:0] ADDR_SPACE_EDN0           = 32'h 41170000;
  localparam logic [31:0] ADDR_SPACE_OTBN           = 32'h 41130000;
  localparam logic [31:0] ADDR_SPACE_KEYMGR         = 32'h 41140000;
  localparam logic [31:0] ADDR_SPACE_SM3            = 32'h 411a0000;
  localparam logic [31:0] ADDR_SPACE_SM4            = 32'h 411b0000;
  localparam logic [31:0] ADDR_SPACE_RS_ENCODE      = 32'h 42110000;
  localparam logic [31:0] ADDR_SPACE_RS_DECODE      = 32'h 42120000;
  localparam logic [31:0] ADDR_SPACE_PUF1           = 32'h 42130000;
  localparam logic [31:0] ADDR_SPACE_PUF2           = 32'h 42140000;
  localparam logic [31:0] ADDR_SPACE_PUF_REG        = 32'h 42150000;
  localparam logic [31:0] ADDR_SPACE_PCR            = 32'h 42160000;

  localparam logic [31:0] ADDR_MASK_ROM_CTRL__ROM  = 32'h 00007fff;
  localparam logic [31:0] ADDR_MASK_ROM_CTRL__REGS = 32'h 0000007f;
  localparam logic [31:0] ADDR_MASK_HMAC           = 32'h 00001fff;
  localparam logic [31:0] ADDR_MASK_KMAC           = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_AES            = 32'h 000000ff;
  localparam logic [31:0] ADDR_MASK_ENTROPY_SRC    = 32'h 000000ff;
  localparam logic [31:0] ADDR_MASK_CSRNG          = 32'h 0000007f;
  localparam logic [31:0] ADDR_MASK_EDN0           = 32'h 0000007f;
  localparam logic [31:0] ADDR_MASK_OTBN           = 32'h 0000ffff;
  localparam logic [31:0] ADDR_MASK_KEYMGR         = 32'h 000000ff;
  localparam logic [31:0] ADDR_MASK_SM3            = 32'h 0000003f;
  localparam logic [31:0] ADDR_MASK_SM4            = 32'h 0000003f;
  localparam logic [31:0] ADDR_MASK_RS_ENCODE      = 32'h 000001ff;
  localparam logic [31:0] ADDR_MASK_RS_DECODE      = 32'h 000001ff;
  localparam logic [31:0] ADDR_MASK_PUF1           = 32'h 0000003f;
  localparam logic [31:0] ADDR_MASK_PUF2           = 32'h 0000003f;
  localparam logic [31:0] ADDR_MASK_PUF_REG        = 32'h 0000003f;
  localparam logic [31:0] ADDR_MASK_PCR            = 32'h 0000003f;

  localparam int N_HOST   = 1;
  localparam int N_DEVICE = 18;

  typedef enum int {
    TlRomCtrlRom = 0,
    TlRomCtrlRegs = 1,
    TlHmac = 2,
    TlKmac = 3,
    TlAes = 4,
    TlEntropySrc = 5,
    TlCsrng = 6,
    TlEdn0 = 7,
    TlOtbn = 8,
    TlKeymgr = 9,
    TlSm3 = 10,
    TlSm4 = 11,
    TlRsEncode = 12,
    TlRsDecode = 13,
    TlPuf1 = 14,
    TlPuf2 = 15,
    TlPufReg = 16,
    TlPcr = 17
  } tl_device_e;

  typedef enum int {
    TlRot = 0
  } tl_host_e;

endpackage
